{"version":3,"file":"static/js/81.c17c5c5b.chunk.js","mappings":"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","sources":["components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem.tsx","constants/patterns.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings.tsx","pages/SecuritySettingsPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\r\n\r\nexport const ConfirmItemPassword: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseButtonsForm.Item\r\n      name=\"confirmPassword\"\r\n      label={t('profile.nav.securitySettings.confirmPassword')}\r\n      dependencies={['newPassword']}\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: t('profile.nav.securitySettings.requiredPassword'),\r\n        },\r\n        ({ getFieldValue }) => ({\r\n          validator(_, value) {\r\n            if (!value || getFieldValue('newPassword') === value) {\r\n              return Promise.resolve();\r\n            }\r\n            return Promise.reject(new Error(t('profile.nav.securitySettings.dontMatchPassword')));\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <InputPassword />\r\n    </BaseButtonsForm.Item>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\r\n\r\nexport const CurrentPasswordItem: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseButtonsForm.Item\r\n      name=\"password\"\r\n      label={t('profile.nav.securitySettings.currentPassword')}\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: t('profile.nav.securitySettings.requiredPassword'),\r\n        },\r\n      ]}\r\n    >\r\n      <InputPassword />\r\n    </BaseButtonsForm.Item>\r\n  );\r\n};\r\n","export const passwordPattern = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/);\r\n\r\nexport const websitePattern = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?/gi;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\r\nimport { passwordPattern } from '@app/constants/patterns';\r\n\r\nexport const NewPasswordItem: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseButtonsForm.Item\r\n      name=\"newPassword\"\r\n      label={t('profile.nav.securitySettings.newPassword')}\r\n      dependencies={['password']}\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: t('profile.nav.securitySettings.requiredPassword'),\r\n        },\r\n        {\r\n          pattern: passwordPattern,\r\n          message: t('profile.nav.securitySettings.notValidPassword'),\r\n        },\r\n        ({ getFieldValue }) => ({\r\n          validator(_, value) {\r\n            if (!value || getFieldValue('password') !== value) {\r\n              return Promise.resolve();\r\n            }\r\n            return Promise.reject(new Error(t('profile.nav.securitySettings.samePassword')));\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <InputPassword />\r\n    </BaseButtonsForm.Item>\r\n  );\r\n};\r\n","import { BaseButton } from '@app/components/common/BaseButton/BaseButton';\r\nimport { media } from '@app/styles/themes/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const Btn = styled(BaseButton)`\r\n  margin: 0.5rem 0 1.5rem 0;\r\n  width: 100%;\r\n\r\n  @media only screen and ${media.md} {\r\n    max-width: 10rem;\r\n  }\r\n\r\n  @media only screen and ${media.xl} {\r\n    max-width: unset;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport { ConfirmItemPassword } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem';\r\nimport { CurrentPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem';\r\nimport { NewPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem';\r\nimport { notificationController } from '@app/controllers/notificationController';\r\nimport * as S from './PasswordForm.styles';\r\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\r\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\r\n\r\nexport const PasswordForm: React.FC = () => {\r\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const onFinish = (values: []) => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setFieldsChanged(false);\r\n      notificationController.success({ message: t('common.success') });\r\n      console.log(values);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <BaseButtonsForm\r\n      name=\"newPassword\"\r\n      requiredMark=\"optional\"\r\n      isFieldsChanged={isFieldsChanged}\r\n      onFieldsChange={() => setFieldsChanged(true)}\r\n      footer={\r\n        <S.Btn loading={isLoading} type=\"primary\" htmlType=\"submit\">\r\n          {t('common.confirm')}\r\n        </S.Btn>\r\n      }\r\n      onFinish={onFinish}\r\n    >\r\n      <BaseRow gutter={{ md: 15, xl: 30 }}>\r\n        <BaseCol span={24}>\r\n          <BaseButtonsForm.Item>\r\n            <BaseButtonsForm.Title>{t('profile.nav.securitySettings.changePassword')}</BaseButtonsForm.Title>\r\n          </BaseButtonsForm.Item>\r\n        </BaseCol>\r\n\r\n        <BaseCol xs={24} md={12} xl={24}>\r\n          <CurrentPasswordItem />\r\n        </BaseCol>\r\n\r\n        <BaseCol xs={24} md={12} xl={24}>\r\n          <NewPasswordItem />\r\n        </BaseCol>\r\n\r\n        <BaseCol xs={24} md={12} xl={24}>\r\n          <ConfirmItemPassword />\r\n        </BaseCol>\r\n      </BaseRow>\r\n    </BaseButtonsForm>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\r\nimport { PasswordForm } from './passwordForm/PasswordForm/PasswordForm';\r\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\r\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\r\n\r\nexport const SecuritySettings: React.FC = () => (\r\n  <BaseCard>\r\n    <BaseRow gutter={[30, 0]}>\r\n      <BaseCol xs={24} xl={24}>\r\n        <PasswordForm />\r\n      </BaseCol>\r\n    </BaseRow>\r\n  </BaseCard>\r\n);\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SecuritySettings } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings';\r\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\r\n\r\nconst SecuritySettingsPage: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>{t('profile.nav.securitySettings.title')}</PageTitle>\r\n      <SecuritySettings />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SecuritySettingsPage;\r\n"],"names":["ConfirmItemPassword","t","useTranslation","_jsx","BaseButtonsForm","Item","name","label","dependencies","rules","required","message","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","children","InputPassword","CurrentPasswordItem","passwordPattern","RegExp","NewPasswordItem","pattern","Btn","styled","BaseButton","_templateObject","_taggedTemplateLiteral","media","md","xl","PasswordForm","isFieldsChanged","setFieldsChanged","useState","isLoading","setLoading","requiredMark","onFieldsChange","footer","S","loading","type","htmlType","onFinish","values","setTimeout","notificationController","success","console","log","_jsxs","BaseRow","gutter","BaseCol","span","Title","xs","SecuritySettings","BaseCard","SecuritySettingsPage","_Fragment","PageTitle"],"sourceRoot":""}