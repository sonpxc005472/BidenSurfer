{"version":3,"file":"static/js/545.0b6e9547.chunk.js","mappings":"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","sources":["constants/modalSizes.ts","components/common/BaseModal/BaseModal.tsx","components/common/BaseSwitch/BaseSwitch.styles.ts","components/common/BaseSwitch/BaseSwitch.tsx","components/common/BaseTable/BaseTable.styles.ts","components/common/BaseTable/BaseTable.tsx","components/common/selects/BaseSelect/BaseSelect.styles.ts","components/common/selects/BaseSelect/BaseSelect.tsx","components/tables/ConfigurationTable/Configuration.styles.ts","components/tables/ConfigurationTable/ConfigurationTable.tsx","pages/ConfigurationPage.tsx","pages/uiComponentsPages/UIComponentsPage.styles.ts"],"sourcesContent":["interface ModalSizes {\r\n  small: string;\r\n  medium: string;\r\n  large: string;\r\n}\r\n\r\nexport const modalSizes: ModalSizes = {\r\n  small: '400px',\r\n  medium: '600px',\r\n  large: '800px',\r\n};\r\n","import React from 'react';\r\nimport { Modal, ModalProps } from 'antd';\r\nimport { modalSizes } from 'constants/modalSizes';\r\n\r\ninterface BaseModalProps extends ModalProps {\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\ninterface BaseModalInterface extends React.FC<BaseModalProps> {\r\n  info: typeof Modal.info;\r\n  success: typeof Modal.success;\r\n  warning: typeof Modal.warning;\r\n  error: typeof Modal.error;\r\n}\r\n\r\nexport const BaseModal: BaseModalInterface = ({ size = 'medium', children, ...props }) => {\r\n  const modalSize = Object.entries(modalSizes).find((sz) => sz[0] === size)?.[1];\r\n\r\n  return (\r\n    <Modal getContainer={false} width={modalSize} {...props}>\r\n      {children}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nBaseModal.info = Modal.info;\r\nBaseModal.success = Modal.success;\r\nBaseModal.warning = Modal.warning;\r\nBaseModal.error = Modal.error;\r\n","import styled from 'styled-components';\r\nimport { Switch as AntdSwitch } from 'antd';\r\n\r\nexport const Switch = styled(AntdSwitch)`\r\n  &.ant-switch[aria-checked='false'] {\r\n    background-image: linear-gradient(to right, var(--disabled-color), var(--disabled-color)),\r\n      linear-gradient(to right, var(--background-color), var(--background-color));\r\n  }\r\n`;\r\n","import { SwitchProps } from 'antd';\r\nimport * as S from './BaseSwitch.styles';\r\n\r\nexport type BaseSwitchProps = SwitchProps;\r\n\r\nexport const BaseSwitch: React.FC<SwitchProps> = (props) => {\r\n  return <S.Switch {...props} />;\r\n};\r\n","import styled from 'styled-components';\r\nimport { Table as AntdTable } from 'antd';\r\nimport { FONT_SIZE } from '@app/styles/themes/constants';\r\n\r\nexport const Table = styled(AntdTable)`\r\n  & thead .ant-table-cell {\r\n    color: var(--primary-color);\r\n    font-size: ${FONT_SIZE.xs};\r\n    line-height: 1.25rem;\r\n    padding: 8px;\r\n    & .anticon {\r\n      color: var(--primary-color);\r\n    }\r\n  }\r\n\r\n  & tbody .ant-table-cell {\r\n    color: var(--text-main-color);\r\n    font-size: ${FONT_SIZE.xs};\r\n    line-height: 1.25rem;\r\n    padding: 8px;\r\n  }\r\n\r\n  & tbody .ant-table-row-expand-icon {\r\n    min-height: 1.25rem;\r\n    min-width: 1.25rem;\r\n    border-radius: 0.1875rem;\r\n    margin-top: 0;\r\n  }\r\n\r\n  // Override default antd selector\r\n  &\r\n    .ant-table-thead\r\n    > tr\r\n    > th:not(:last-child):not(.ant-table-selection-column):not(.ant-table-row-expand-icon-cell):not([colspan])::before {\r\n    background-color: var(--primary-color);\r\n  }\r\n\r\n  & .ant-pagination-prev,\r\n  .ant-pagination-next,\r\n  .ant-pagination-jump-prev,\r\n  .ant-pagination-jump-next,\r\n  .ant-pagination-item {\r\n    min-width: 2.0625rem;\r\n    height: 2.0625rem;\r\n    line-height: 2.0625rem;\r\n    border-radius: 0;\r\n    font-size: ${FONT_SIZE.xs};\r\n  }\r\n\r\n  & .ant-pagination-prev .ant-pagination-item-link,\r\n  .ant-pagination-next .ant-pagination-item-link {\r\n    border-radius: 0;\r\n  }\r\n\r\n  & .ant-checkbox-inner {\r\n    border-radius: 0.1875rem;\r\n    height: 1.25rem;\r\n    width: 1.25rem;\r\n    border: 1px solid var(--primary-color);\r\n  }\r\n\r\n  & .editable-row .ant-form-item-explain {\r\n    position: absolute;\r\n    top: 100%;\r\n    font-size: 0.75rem;\r\n  }\r\n\r\n  .ant-table-column-sort {\r\n    background-color: transparent;\r\n  }\r\n\r\n  .ant-pagination-item-container .ant-pagination-item-ellipsis {\r\n    color: var(--disabled-color);\r\n  }\r\n\r\n  .ant-pagination-disabled {\r\n    .ant-pagination-item-link,\r\n    .ant-pagination-item a {\r\n      color: var(--disabled-color);\r\n    }\r\n  }\r\n\r\n  .ant-pagination.ant-pagination-disabled {\r\n    .ant-pagination-item-link,\r\n    .ant-pagination-item a {\r\n      color: var(--disabled-color);\r\n    }\r\n  }\r\n`;\r\n","/*   */\r\nimport React from 'react';\r\nimport { TableProps } from 'antd';\r\nimport * as S from './BaseTable.styles';\r\n\r\nexport type BaseTableProps<T> = TableProps<T>;\r\n\r\n// TODO make generic!\r\nexport const BaseTable: React.FC<BaseTableProps<any>> = (props) => {\r\n  return <S.Table {...props} />;\r\n};\r\n","import styled from 'styled-components';\r\nimport { Select as AntSelect } from 'antd';\r\nimport { Dimension } from 'interfaces/interfaces';\r\nimport { normalizeProp } from '@app/utils/utils';\r\nimport { FONT_WEIGHT, BORDER_RADIUS, FONT_SIZE } from '@app/styles/themes/constants';\r\n\r\nexport interface InternalSelectProps {\r\n  $width?: Dimension;\r\n  $shadow?: boolean;\r\n}\r\n\r\nexport const Select = styled(AntSelect)<InternalSelectProps>`\r\n  width: ${(props) => props.$width && normalizeProp(props.$width)};\r\n\r\n  font-weight: ${FONT_WEIGHT.medium};\r\n\r\n  box-shadow: ${(props) => props.$shadow && 'var(--box-shadow)'};\r\n\r\n  &.ant-select-borderless {\r\n    background: var(--secondary-background-color);\r\n\r\n    border-radius: ${BORDER_RADIUS};\r\n  }\r\n\r\n  .ant-select-selection-placeholder {\r\n    font-size: ${FONT_SIZE.xs};\r\n\r\n    color: var(--text-main-color);\r\n  }\r\n\r\n  .ant-select-arrow {\r\n    color: var(--text-main-color);\r\n  }\r\n\r\n  &.ant-select-multiple.ant-select-sm .ant-select-selection-item {\r\n    height: 0.875rem;\r\n    line-height: ${FONT_SIZE.xs};\r\n    font-size: ${FONT_SIZE.xs};\r\n    margin-top: 0.1875rem;\r\n    margin-bottom: 0.1875rem;\r\n  }\r\n\r\n  &.ant-select-disabled.ant-select:not(.ant-select-customize-input) .ant-select-selector {\r\n    color: var(--disabled-color);\r\n  }\r\n\r\n  .ant-select-clear {\r\n    color: var(--disabled-color);\r\n  }\r\n  .ant-select-selection-item-remove {\r\n    color: var(--icon-color);\r\n    &:hover {\r\n      color: var(--icon-hover-color);\r\n    }\r\n  }\r\n  .ant-select-item-option-disabled {\r\n    color: var(--disabled-color);\r\n  }\r\n`;\r\n","import React, { ComponentProps } from 'react';\r\nimport { Select as AntSelect } from 'antd';\r\nimport { RefSelectProps } from 'antd/lib/select';\r\nimport * as S from './BaseSelect.styles';\r\nimport { Dimension } from '@app/interfaces/interfaces';\r\n\r\nexport const { Option } = AntSelect;\r\n\r\nexport interface BaseSelectProps extends ComponentProps<typeof AntSelect> {\r\n  width?: Dimension;\r\n  shadow?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport const BaseSelect = React.forwardRef<RefSelectProps, BaseSelectProps>(\r\n  ({ className, width, shadow, children, ...props }, ref) => (\r\n    <S.Select\r\n      getPopupContainer={(triggerNode) => triggerNode}\r\n      ref={ref}\r\n      className={className}\r\n      $width={width}\r\n      $shadow={shadow}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </S.Select>\r\n  ),\r\n);\r\n","import styled from 'styled-components';\r\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\r\n\r\n\r\nexport const AddConfigurationButton = styled(BaseButton)`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n`;\r\n","import React, { useEffect, useCallback , useState } from 'react';\r\nimport { BaseTable } from '@app/components/common/BaseTable/BaseTable';\r\nimport { ColumnsType } from 'antd/es/table';\r\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseSpace } from '@app/components/common/BaseSpace/BaseSpace';\r\nimport { BaseTooltip } from '@app/components/common/BaseTooltip/BaseTooltip';\r\nimport { DeleteOutlined, EditFilled, PlusOutlined } from '@ant-design/icons';\r\nimport { BaseSwitch } from '@app/components/common/BaseSwitch/BaseSwitch';\r\nimport { ConfigurationForm, ConfigurationTableRow, SymbolData, deleteConfig, getConfigurationData, getMaxBorrow, getSymbolData, setConfigActive } from 'api/table.api';\r\nimport { useMounted } from '@app/hooks/useMounted';\r\nimport { BaseModal } from '@app/components/common/BaseModal/BaseModal';\r\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\r\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\r\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\r\nimport { AddConfigurationButton } from './Configuration.styles';\r\nimport { BaseSelect } from '@app/components/common/selects/BaseSelect/BaseSelect';\r\nimport { InputNumber, Typography } from 'antd';\r\nimport { doSaveConfiguration } from '@app/store/slices/userSlice';\r\nimport { useAppDispatch } from '@app/hooks/reduxHooks';\r\nimport { notificationController } from '@app/controllers/notificationController';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\n\r\nconst initialFormValues: ConfigurationForm = {\r\n  id: undefined,\r\n  userId: undefined,\r\n  symbol: undefined,\r\n  positionSide: 'short',\r\n  orderChange: undefined,\r\n  increaseAmountPercent: undefined,\r\n  amount: undefined,\r\n  increaseAmountExpire: undefined,\r\n  amountLimit: undefined,\r\n  expire: undefined,\r\n  increaseOcPercent: 10,\r\n  isActive: true\r\n};\r\n\r\nexport const ConfigurationTable: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [tableData, setTableData] = useState<{ data: ConfigurationTableRow[] }>({\r\n    data: [],\r\n  });\r\n  const [selectOptions, setSelectOptions] = useState<SymbolData[]>([]);\r\n  const [maxBorrow, setMaxBorrow] = useState<number>();\r\n\r\n  const { t } = useTranslation();\r\n  const { isMounted } = useMounted();\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [isEditConfig, setIsEditConfig] = useState<boolean>(false);\r\n  const { Text } = Typography;\r\n\r\n  const [form] = BaseForm.useForm();  \r\n\r\n  const fetch = useCallback(\r\n    () => {\r\n      getConfigurationData().then((res) => {\r\n        if (isMounted.current) {          \r\n          setTableData({data: res});\r\n        }\r\n      });      \r\n    },\r\n    [isMounted],\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n  }, [fetch]);\r\n \r\n  const handleOpenAddEdit = (rowId?: number) => {   \r\n    \r\n    if(rowId)\r\n      {        \r\n        setIsEditConfig(true);\r\n        let cloneData = {...tableData };\r\n        cloneData.data.forEach(function(part, index, theArray) {\r\n          if(theArray[index].id === rowId)\r\n          {\r\n            getMaxBorrow(theArray[index].symbol, theArray[index].positionSide).then((res) => {\r\n              if (isMounted.current) {          \r\n                setMaxBorrow(res);\r\n              }\r\n            });\r\n            form.setFieldsValue({\r\n              ...initialFormValues,\r\n              symbol: theArray[index].symbol,\r\n              positionSide: theArray[index].positionSide,\r\n              amount: theArray[index].amount,\r\n              amountLimit: theArray[index].amountLimit,\r\n              expire: theArray[index].expire,\r\n              increaseAmountExpire: theArray[index].increaseAmountExpire,\r\n              increaseAmountPercent: theArray[index].increaseAmountPercent,\r\n              increaseOcPercent: theArray[index].increaseOcPercent,\r\n              isActive: theArray[index].isActive,\r\n              id: theArray[index].id,\r\n              orderChange: theArray[index].orderChange,\r\n            })\r\n          }\r\n        });        \r\n      }\r\n    else\r\n      {\r\n        getSymbolData().then((res) => {\r\n          if (isMounted.current) {          \r\n            setSelectOptions(res);\r\n          }\r\n        });\r\n        setIsEditConfig(false);\r\n        form.setFieldsValue({\r\n          ...initialFormValues\r\n        })\r\n      }\r\n      setIsModalOpen(true);\r\n  };\r\n    \r\n  const handleDeleteRow = (rowId: number) => {\r\n    deleteConfig(rowId).then((res) => {\r\n      if (res) {          \r\n        setTableData({\r\n          ...tableData,\r\n          data: tableData.data.filter((item) => item.id !== rowId)\r\n        });\r\n      }\r\n      else{\r\n        notificationController.error({ message: \"something went wrong!\" });        \r\n      }\r\n    }).catch((err) => {\r\n      notificationController.error({ message: err.message });        \r\n    });\r\n    \r\n  };\r\n\r\n  const handleActiveRow = (rowId: number, isActive: boolean) => {\r\n    setConfigActive(rowId, isActive).then((res) => {\r\n      if (res) {          \r\n        fetch()\r\n      }\r\n      else{\r\n        notificationController.error({ message: \"something went wrong!\" });        \r\n      }\r\n    }).catch((err) => {\r\n      notificationController.error({ message: err.message });        \r\n    });\r\n  };\r\n\r\n  const columns: ColumnsType<ConfigurationTableRow> = [\r\n    {\r\n      title: () => (<div>Symbol ({tableData.data.filter((item) => item.isActive).length}/{tableData.data.length})</div>),\r\n      dataIndex: 'symbol',\r\n      width: '30px',\r\n      render: (text: string, record: { id: number; isActive: boolean }) => {\r\n        return (\r\n          <BaseSpace>            \r\n            <BaseTooltip title=\"edit\">\r\n              <BaseButton type=\"default\" size='small' icon={<EditFilled />} onClick={() => handleOpenAddEdit(record.id)} />\r\n            </BaseTooltip>\r\n            <BaseSwitch size='small' checked={record.isActive} onChange={() => handleActiveRow(record.id, !record.isActive)} />\r\n            <div>{text}</div>\r\n          </BaseSpace>\r\n        );\r\n      },\r\n    },    \r\n    {\r\n      title: 'Position',\r\n      dataIndex: 'positionSide',\r\n      width: '10px',\r\n    }, \r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'amount'\r\n    },\r\n    {\r\n      title: 'OC',\r\n      dataIndex: 'orderChange',\r\n    },\r\n    {\r\n      title: 'Auto Amount',\r\n      dataIndex: 'increaseAmountPercent',\r\n    },\r\n    {\r\n      title: 'Amount Expire',\r\n      dataIndex: 'increaseAmountExpire',\r\n    },\r\n    {\r\n      title: 'Amount Limit',\r\n      dataIndex: 'amountLimit',\r\n    },  \r\n    {\r\n      title: 'Expire',\r\n      dataIndex: 'expire',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'delete',\r\n      width: '5%',\r\n      render: (text: string, record: { id: number, isActive: boolean }) => {\r\n        return (\r\n          <BaseSpace>            \r\n            <BaseTooltip title=\"Delete\">\r\n              <BaseButton type=\"primary\" disabled={record.isActive} shape=\"circle\" icon={<DeleteOutlined />} size=\"small\" onClick={() => handleDeleteRow(record.id)}/>\r\n            </BaseTooltip>\r\n          </BaseSpace>\r\n        );\r\n      },\r\n    }\r\n  ];\r\n\r\n  const onSwitchChange = (checked: boolean) => {\r\n    form.setFieldsValue({ isActive: checked });\r\n  };\r\n  const handleSymbolChange = (value: unknown) => {\r\n    const positionSide = form.getFieldValue('positionSide');\r\n    if(value && positionSide)\r\n      {\r\n        getMaxBorrow(value as string, positionSide).then((res) => {\r\n          if (isMounted.current) {          \r\n            setMaxBorrow(res);\r\n          }\r\n        });\r\n      }\r\n  };\r\n\r\n  const handlePositionChange = (value: unknown) => {\r\n    const symbol = form.getFieldValue('symbol');\r\n    if(value && symbol)\r\n      {\r\n        getMaxBorrow(symbol, value as string).then((res) => {\r\n          if (isMounted.current) {          \r\n            setMaxBorrow(res);\r\n          }\r\n        });\r\n      }\r\n  };\r\n\r\n  const handleSaveConfig = () => {\r\n    const symbol = form.getFieldValue('symbol');\r\n    const positionSide = form.getFieldValue('positionSide');\r\n    const id = form.getFieldValue('id');\r\n    const orderChange = form.getFieldValue('orderChange');\r\n    const increaseAmountPercent = form.getFieldValue('increaseAmountPercent');\r\n    const amount = form.getFieldValue('amount');\r\n    const amountLimit = form.getFieldValue('amountLimit');\r\n    const increaseAmountExpire = form.getFieldValue('increaseAmountExpire');\r\n    const expire = form.getFieldValue('expire');\r\n    const increaseOcPercent = form.getFieldValue('increaseOcPercent');\r\n    const isActive = form.getFieldValue('isActive');\r\n    const formValues: ConfigurationForm = {\r\n      id: id,\r\n      symbol: symbol,\r\n      customId: '',\r\n      orderType: 1,\r\n      userId: 0,\r\n      positionSide: positionSide,\r\n      orderChange: orderChange,\r\n      increaseAmountPercent: increaseAmountPercent ?? 0,\r\n      amount: amount,\r\n      increaseAmountExpire: increaseAmountExpire ?? 0,\r\n      amountLimit: amountLimit ?? 0,\r\n      expire: expire ?? 0,\r\n      increaseOcPercent: increaseOcPercent ?? 0,\r\n      isActive: isActive\r\n    };\r\n    debugger;\r\n    dispatch(doSaveConfiguration(formValues))\r\n      .unwrap()\r\n      .then(() => {\r\n        fetch();\r\n        setIsModalOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        notificationController.error({ message: err.message });        \r\n      });\r\n  };\r\n  const [isFieldsChanged, setFieldsChanged] = useState(true);\r\n  const onFinish = async (values = {}) => {\r\n    handleSaveConfig();\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <BaseTable\r\n      columns={columns}\r\n      dataSource={tableData.data}\r\n      rowKey=\"id\"\r\n      pagination={false}\r\n      scroll={{ x: 1000 }}\r\n      />\r\n      <BaseModal\r\n            title={ isEditConfig ? 'Edit configuration': 'Add configuration'}\r\n            centered\r\n            open={isModalOpen}            \r\n            size=\"large\"\r\n            style={{ fontSize: \"12px\" }}\r\n            footer={<></>}\r\n            onCancel={()=>setIsModalOpen(false)}\r\n          >\r\n            <BaseButtonsForm\r\n              name=\"editForm\"\r\n              form={form}      \r\n              isFieldsChanged={isFieldsChanged}\r\n              initialValues={initialFormValues}    \r\n              footer={\r\n                <>\r\n                  <BaseButtonsForm.Item style={{marginTop: '30px'}}>\r\n                    <BaseButton type=\"primary\" htmlType=\"submit\" style={{float: 'right', width: '100px', height: '40px'}}>\r\n                      Save\r\n                    </BaseButton>\r\n                    <BaseButton type=\"primary\" htmlType=\"button\" style={{float: 'right', width: '100px', height: '40px', marginRight: '20px'}}\r\n                      onClick={() => {              \r\n                        setMaxBorrow(undefined);\r\n                        setIsModalOpen(false);\r\n                      }}>\r\n                      Cancel\r\n                    </BaseButton>\r\n                  </BaseButtonsForm.Item>                \r\n                </>\r\n                \r\n              }    \r\n              onFinish={onFinish}\r\n            >\r\n              <BaseRow gutter={{ xs: 10, md: 15, xl: 20 }}>\r\n                  <BaseCol xs={16} md={12}>\r\n                    <BaseButtonsForm.Item name='symbol' label='Symbol' style={{marginBottom: '5px'}}\r\n                      rules={[{ required: true, message: 'Symbol is required' }]}\r\n                    >\r\n                      <BaseSelect disabled={isEditConfig} onChange={handleSymbolChange} showSearch placeholder='Select symbol' options={selectOptions} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={8} md={12}>\r\n                    <BaseButtonsForm.Item name='positionSide' label='Position' style={{marginBottom: '5px'}}\r\n                      rules={[{ required: true, message: 'Position is required' }]}>\r\n                      <BaseSelect disabled={isEditConfig} onChange={handlePositionChange} placeholder='Select position' options={[{value: 'short'}, {value: 'long'}]} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow>\r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='orderChange' label='OC' style={{marginBottom: '5px'}}\r\n                      rules={[{ required: true, message: 'OC is required' }]}>\r\n                      <InputNumber min={0.1} addonAfter='%' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='amount' label='Amount' style={{marginBottom: '5px'}}\r\n                        rules={[{ required: true, message: 'Amount is required' }]}>\r\n                      <InputNumber min={1} addonAfter='$' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow>\r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='increaseAmountPercent' label='Amount Increase' style={{marginBottom: '5px'}}>\r\n                      <InputNumber min={0} addonAfter='%' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='amountLimit' label='Limit' style={{marginBottom: '5px'}}>\r\n                      <InputNumber min={1} addonAfter='$' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow>\r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='increaseAmountExpire' label='Amount Expire' style={{marginBottom: '5px'}}>\r\n                      <InputNumber min={0} addonAfter='min' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='expire' label='Expire' style={{marginBottom: '5px'}}>\r\n                      <InputNumber min={0} addonAfter='min' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow> \r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='increaseOcPercent' label='Auto OC' style={{marginBottom: '5px'}}>\r\n                      <InputNumber min={0} addonAfter='%' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='isActive' label='Active' valuePropName=\"checked\" style={{marginBottom: '5px'}}>\r\n                      <BaseSwitch onChange={onSwitchChange} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow>\r\n              {maxBorrow ? (<BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <Text strong>Max: {maxBorrow} USDT</Text>\r\n                  </BaseCol>                  \r\n              </BaseRow> ) : <></>}\r\n                                          \r\n            </BaseButtonsForm>            \r\n      </BaseModal>\r\n      <BaseTooltip title='Add configurations'>\r\n        <AddConfigurationButton type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size=\"large\" onClick={()=> handleOpenAddEdit()}></AddConfigurationButton>\r\n      </BaseTooltip>      \r\n    </>    \r\n  );\r\n};\r\n","import React from 'react';\r\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\r\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\r\nimport { BaseSpace } from '@app/components/common/BaseSpace/BaseSpace';\r\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\r\nimport { ConfigurationTable } from '@app/components/tables/ConfigurationTable/ConfigurationTable';\r\n\r\nconst ConfigurationPage: React.FC = () => {\r\n   \r\n  return (\r\n    <>\r\n      <PageTitle>Configurations</PageTitle>\r\n      <BaseCol>        \r\n        <S.Card title='Configurations'>\r\n          <BaseSpace direction=\"vertical\" style={{width: \"100%\"}} size={24}>      \r\n            <ConfigurationTable />\r\n          </BaseSpace>\r\n        </S.Card>\r\n      </BaseCol>      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfigurationPage;\r\n","import styled from 'styled-components';\r\nimport { BaseCard as CommonCard } from '@app/components/common/BaseCard/BaseCard';\r\nimport { BaseCollapse } from '@app/components/common/BaseCollapse/BaseCollapse';\r\n\r\nexport const Card = styled(CommonCard)`\r\n  width: 100%;\r\n  margin-bottom: 1.25rem;\r\n  .ant-card-head-title {\r\n    font-size: 1rem;\r\n  }\r\n  .ant-card-body {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1.25rem;\r\n    align-items: center;\r\n  }\r\n  .ant-card-body:before {\r\n    display: none;\r\n  }\r\n  .ant-card-body:after {\r\n    display: none;\r\n  }\r\n  &.ant-card-bordered {\r\n    border: 1px solid var(--border-color);\r\n  }\r\n`;\r\n\r\nexport const InputsWrapper = styled.div`\r\n  width: 30rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.25rem;\r\n`;\r\n\r\nexport const CollapseWrapper = styled(BaseCollapse)`\r\n  width: 40rem;\r\n`;\r\n"],"names":["modalSizes","small","medium","large","BaseModal","_ref","_Object$entries$find","size","children","props","modalSize","Object","entries","find","sz","_jsx","Modal","getContainer","width","info","success","warning","error","Switch","styled","AntdSwitch","_templateObject","_taggedTemplateLiteral","BaseSwitch","S","Table","AntdTable","FONT_SIZE","xs","BaseTable","Select","AntSelect","$width","normalizeProp","FONT_WEIGHT","$shadow","BORDER_RADIUS","Option","BaseSelect","React","ref","className","shadow","getPopupContainer","triggerNode","AddConfigurationButton","BaseButton","initialFormValues","id","undefined","userId","symbol","positionSide","orderChange","increaseAmountPercent","amount","increaseAmountExpire","amountLimit","expire","increaseOcPercent","isActive","ConfigurationTable","dispatch","useAppDispatch","tableData","setTableData","useState","data","selectOptions","setSelectOptions","maxBorrow","setMaxBorrow","t","useTranslation","isMounted","useMounted","isModalOpen","setIsModalOpen","isEditConfig","setIsEditConfig","Text","Typography","form","BaseForm","useForm","fetch","useCallback","getConfigurationData","then","res","current","useEffect","handleOpenAddEdit","rowId","forEach","part","index","theArray","getMaxBorrow","setFieldsValue","getSymbolData","columns","title","_jsxs","filter","item","length","dataIndex","render","text","record","BaseSpace","BaseTooltip","type","icon","EditFilled","onClick","checked","onChange","handleActiveRow","setConfigActive","notificationController","message","catch","err","disabled","shape","DeleteOutlined","handleDeleteRow","deleteConfig","isFieldsChanged","setFieldsChanged","_Fragment","dataSource","rowKey","pagination","scroll","x","centered","open","style","fontSize","footer","onCancel","BaseButtonsForm","name","initialValues","Item","marginTop","htmlType","float","height","marginRight","onFinish","async","handleSaveConfig","getFieldValue","formValues","customId","orderType","doSaveConfiguration","unwrap","BaseRow","gutter","md","xl","BaseCol","label","marginBottom","rules","required","value","showSearch","placeholder","options","InputNumber","min","addonAfter","valuePropName","strong","PlusOutlined","ConfigurationPage","PageTitle","direction","Card","CommonCard","div","_templateObject2","BaseCollapse","_templateObject3"],"sourceRoot":""}