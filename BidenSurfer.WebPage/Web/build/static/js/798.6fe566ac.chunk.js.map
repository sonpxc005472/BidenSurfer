{"version":3,"file":"static/js/798.6fe566ac.chunk.js","mappings":"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","sources":["components/profile/profileCard/profileFormNav/nav/PersonalInfo/FirstNameItem/FirstNameItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PersonalInfo.tsx","pages/PersonalInfoPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\n\r\nexport const FirstNameItem: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseButtonsForm.Item name=\"nickname\" label=\"Name\">\r\n      <BaseInput disabled={true} />\r\n    </BaseButtonsForm.Item>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport { BaseFormItemProps } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\r\n\r\ninterface EmailItemProps extends BaseFormItemProps {\r\n  verified?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport const EmailItem: React.FC<EmailItemProps> = ({ required, onClick, verified, ...props }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BaseButtonsForm.Item\r\n      name=\"email\"\r\n      $isSuccess={verified}\r\n      $successText={t('profile.nav.personalInfo.verified')}\r\n      label={t('common.email')}\r\n      rules={[\r\n        { required, message: t('common.requiredField') },\r\n        {\r\n          type: 'email',\r\n          message: t('common.notValidEmail'),\r\n        },\r\n      ]}\r\n      {...props}\r\n    >\r\n      <BaseInput disabled={verified} onClick={onClick} />\r\n    </BaseButtonsForm.Item>\r\n  );\r\n};\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\r\nimport { FirstNameItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/FirstNameItem/FirstNameItem';\r\nimport { EmailItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem';\r\nimport { useAppSelector } from '@app/hooks/reduxHooks';\r\nimport { Dates } from '@app/constants/Dates';\r\nimport { notificationController } from '@app/controllers/notificationController';\r\nimport { PaymentCard } from '@app/interfaces/interfaces';\r\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\r\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\r\n\r\ninterface PersonalInfoFormValues {\r\n  birthday?: string;\r\n  fullName?: string;\r\n  country?: string;\r\n  website: string;\r\n  city?: string;\r\n  address2: string;\r\n  nickName?: string;\r\n  address1?: string;\r\n  sex?: string;\r\n  facebook?: string;\r\n  language?: string;\r\n  linkedin?: string;\r\n  zipcode?: string;\r\n  twitter?: string;\r\n  phone?: string;\r\n  email: string;\r\n}\r\n\r\nconst initialPersonalInfoValues: PersonalInfoFormValues = {\r\n  fullName: '',\r\n  nickName: '',\r\n  sex: undefined,\r\n  birthday: undefined,\r\n  language: undefined,\r\n  phone: '',\r\n  email: '',\r\n  country: undefined,\r\n  city: undefined,\r\n  address1: '',\r\n  address2: '',\r\n  zipcode: '',\r\n  website: '',\r\n  twitter: '',\r\n  linkedin: '',\r\n  facebook: '',\r\n};\r\n\r\nexport const PersonalInfo: React.FC = () => {\r\n  const user = useAppSelector((state) => state.user.user);\r\n\r\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const userFormValues = useMemo(\r\n    () =>\r\n      user\r\n        ? {\r\n            fullName: user.fullName,\r\n            email: user.email,\r\n            nickname: user.username,\r\n            sex: user.sex,\r\n            language: user.lang,\r\n            country: user.country,\r\n            city: user.city,\r\n            address1: user.address1,\r\n            address2: user?.address2,\r\n            zipcode: user.zipcode,\r\n            website: user?.website,\r\n            twitter: user?.socials?.twitter,\r\n            linkedin: user?.socials?.linkedin,\r\n            facebook: user?.socials?.facebook,\r\n          }\r\n        : initialPersonalInfoValues,\r\n    [user],\r\n  );\r\n\r\n  const [form] = BaseButtonsForm.useForm();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const onFinish = useCallback(\r\n    (values: PaymentCard) => {\r\n      // todo dispatch an action here\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        setFieldsChanged(false);\r\n        notificationController.success({ message: t('common.success') });\r\n        console.log(values);\r\n      }, 1000);\r\n    },\r\n    [t],\r\n  );\r\n\r\n  return (\r\n    <BaseCard>\r\n      <BaseButtonsForm\r\n        form={form}\r\n        name=\"info\"\r\n        loading={isLoading}\r\n        initialValues={userFormValues}\r\n        isFieldsChanged={isFieldsChanged}\r\n        setFieldsChanged={setFieldsChanged}\r\n        onFieldsChange={() => setFieldsChanged(true)}\r\n        onFinish={onFinish}\r\n      >\r\n        <BaseRow gutter={{ xs: 10, md: 15, xl: 30 }}>\r\n          <BaseCol span={24}>\r\n            <BaseButtonsForm.Item>\r\n              <BaseButtonsForm.Title>{t('profile.nav.personalInfo.title')}</BaseButtonsForm.Title>\r\n            </BaseButtonsForm.Item>\r\n          </BaseCol>\r\n\r\n          <BaseCol xs={24} md={24}>\r\n            <FirstNameItem />\r\n          </BaseCol> \r\n\r\n          <BaseCol xs={24} md={24}>\r\n            <EmailItem verified={true} />\r\n          </BaseCol>          \r\n        </BaseRow>\r\n      </BaseButtonsForm>\r\n    </BaseCard>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { PersonalInfo } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PersonalInfo';\r\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\r\n\r\nconst PersonalInfoPage: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>{t('profile.nav.personalInfo.title')}</PageTitle>\r\n      <PersonalInfo />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonalInfoPage;\r\n"],"names":["FirstNameItem","t","useTranslation","_jsx","BaseButtonsForm","Item","name","label","children","BaseInput","disabled","EmailItem","_ref","required","onClick","verified","props","$isSuccess","$successText","rules","message","type","initialPersonalInfoValues","fullName","nickName","sex","undefined","birthday","language","phone","email","country","city","address1","address2","zipcode","website","twitter","linkedin","facebook","PersonalInfo","user","useAppSelector","state","isFieldsChanged","setFieldsChanged","useState","isLoading","setLoading","userFormValues","useMemo","_user$socials","_user$socials2","_user$socials3","nickname","username","lang","socials","form","useForm","onFinish","useCallback","values","setTimeout","notificationController","success","console","log","BaseCard","loading","initialValues","onFieldsChange","_jsxs","BaseRow","gutter","xs","md","xl","BaseCol","span","Title","PersonalInfoPage","_Fragment","PageTitle"],"sourceRoot":""}