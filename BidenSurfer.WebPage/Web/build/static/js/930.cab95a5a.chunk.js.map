{"version":3,"file":"static/js/930.cab95a5a.chunk.js","mappings":"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","sources":["constants/modalSizes.ts","components/common/BaseModal/BaseModal.tsx","components/common/BaseTable/BaseTable.styles.ts","components/common/BaseTable/BaseTable.tsx","components/common/selects/BaseSelect/BaseSelect.styles.ts","components/common/selects/BaseSelect/BaseSelect.tsx","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","components/tables/Scanners/Scanner.styles.ts","components/common/inputs/InputNumber/InputNumber.styles.ts","components/common/inputs/InputNumber/InputNumber.tsx","components/header/dropdowns/settingsDropdown/settingsOverlay/nightModeSettings/NightTimeSlider/NightTimeSlider.styles.ts","components/tables/Scanners/ScannerTable.tsx","pages/ScannerPage.tsx","pages/uiComponentsPages/UIComponentsPage.styles.ts"],"sourcesContent":["interface ModalSizes {\r\n  small: string;\r\n  medium: string;\r\n  large: string;\r\n}\r\n\r\nexport const modalSizes: ModalSizes = {\r\n  small: '400px',\r\n  medium: '600px',\r\n  large: '800px',\r\n};\r\n","import React from 'react';\r\nimport { Modal, ModalProps } from 'antd';\r\nimport { modalSizes } from 'constants/modalSizes';\r\n\r\ninterface BaseModalProps extends ModalProps {\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\ninterface BaseModalInterface extends React.FC<BaseModalProps> {\r\n  info: typeof Modal.info;\r\n  success: typeof Modal.success;\r\n  warning: typeof Modal.warning;\r\n  error: typeof Modal.error;\r\n}\r\n\r\nexport const BaseModal: BaseModalInterface = ({ size = 'medium', children, ...props }) => {\r\n  const modalSize = Object.entries(modalSizes).find((sz) => sz[0] === size)?.[1];\r\n\r\n  return (\r\n    <Modal getContainer={false} width={modalSize} {...props}>\r\n      {children}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nBaseModal.info = Modal.info;\r\nBaseModal.success = Modal.success;\r\nBaseModal.warning = Modal.warning;\r\nBaseModal.error = Modal.error;\r\n","import styled from 'styled-components';\r\nimport { Table as AntdTable } from 'antd';\r\nimport { FONT_SIZE } from '@app/styles/themes/constants';\r\n\r\nexport const Table = styled(AntdTable)`\r\n  & thead .ant-table-cell {\r\n    color: var(--primary-color);\r\n    font-size: ${FONT_SIZE.xs};\r\n    line-height: 1.25rem;\r\n    padding: 8px;\r\n    & .anticon {\r\n      color: var(--primary-color);\r\n    }\r\n  }\r\n\r\n  & tbody .ant-table-cell {\r\n    color: var(--text-main-color);\r\n    font-size: ${FONT_SIZE.xs};\r\n    line-height: 1.25rem;\r\n    padding: 8px;\r\n  }\r\n\r\n  & tbody .ant-table-row-expand-icon {\r\n    min-height: 1.25rem;\r\n    min-width: 1.25rem;\r\n    border-radius: 0.1875rem;\r\n    margin-top: 0;\r\n  }\r\n\r\n  // Override default antd selector\r\n  &\r\n    .ant-table-thead\r\n    > tr\r\n    > th:not(:last-child):not(.ant-table-selection-column):not(.ant-table-row-expand-icon-cell):not([colspan])::before {\r\n    background-color: var(--primary-color);\r\n  }\r\n\r\n  & .ant-pagination-prev,\r\n  .ant-pagination-next,\r\n  .ant-pagination-jump-prev,\r\n  .ant-pagination-jump-next,\r\n  .ant-pagination-item {\r\n    min-width: 2.0625rem;\r\n    height: 2.0625rem;\r\n    line-height: 2.0625rem;\r\n    border-radius: 0;\r\n    font-size: ${FONT_SIZE.xs};\r\n  }\r\n\r\n  & .ant-pagination-prev .ant-pagination-item-link,\r\n  .ant-pagination-next .ant-pagination-item-link {\r\n    border-radius: 0;\r\n  }\r\n\r\n  & .ant-checkbox-inner {\r\n    border-radius: 0.1875rem;\r\n    height: 1.25rem;\r\n    width: 1.25rem;\r\n    border: 1px solid var(--primary-color);\r\n  }\r\n\r\n  & .editable-row .ant-form-item-explain {\r\n    position: absolute;\r\n    top: 100%;\r\n    font-size: 0.75rem;\r\n  }\r\n\r\n  .ant-table-column-sort {\r\n    background-color: transparent;\r\n  }\r\n\r\n  .ant-pagination-item-container .ant-pagination-item-ellipsis {\r\n    color: var(--disabled-color);\r\n  }\r\n\r\n  .ant-pagination-disabled {\r\n    .ant-pagination-item-link,\r\n    .ant-pagination-item a {\r\n      color: var(--disabled-color);\r\n    }\r\n  }\r\n\r\n  .ant-pagination.ant-pagination-disabled {\r\n    .ant-pagination-item-link,\r\n    .ant-pagination-item a {\r\n      color: var(--disabled-color);\r\n    }\r\n  }\r\n`;\r\n","/*   */\r\nimport React from 'react';\r\nimport { TableProps } from 'antd';\r\nimport * as S from './BaseTable.styles';\r\n\r\nexport type BaseTableProps<T> = TableProps<T>;\r\n\r\n// TODO make generic!\r\nexport const BaseTable: React.FC<BaseTableProps<any>> = (props) => {\r\n  return <S.Table {...props} />;\r\n};\r\n","import styled from 'styled-components';\r\nimport { Select as AntSelect } from 'antd';\r\nimport { Dimension } from 'interfaces/interfaces';\r\nimport { normalizeProp } from '@app/utils/utils';\r\nimport { FONT_WEIGHT, BORDER_RADIUS, FONT_SIZE } from '@app/styles/themes/constants';\r\n\r\nexport interface InternalSelectProps {\r\n  $width?: Dimension;\r\n  $shadow?: boolean;\r\n}\r\n\r\nexport const Select = styled(AntSelect)<InternalSelectProps>`\r\n  width: ${(props) => props.$width && normalizeProp(props.$width)};\r\n\r\n  font-weight: ${FONT_WEIGHT.medium};\r\n\r\n  box-shadow: ${(props) => props.$shadow && 'var(--box-shadow)'};\r\n\r\n  &.ant-select-borderless {\r\n    background: var(--secondary-background-color);\r\n\r\n    border-radius: ${BORDER_RADIUS};\r\n  }\r\n\r\n  .ant-select-selection-placeholder {\r\n    font-size: ${FONT_SIZE.xs};\r\n\r\n    color: var(--text-main-color);\r\n  }\r\n\r\n  .ant-select-arrow {\r\n    color: var(--text-main-color);\r\n  }\r\n\r\n  &.ant-select-multiple.ant-select-sm .ant-select-selection-item {\r\n    height: 0.875rem;\r\n    line-height: ${FONT_SIZE.xs};\r\n    font-size: ${FONT_SIZE.xs};\r\n    margin-top: 0.1875rem;\r\n    margin-bottom: 0.1875rem;\r\n  }\r\n\r\n  &.ant-select-disabled.ant-select:not(.ant-select-customize-input) .ant-select-selector {\r\n    color: var(--disabled-color);\r\n  }\r\n\r\n  .ant-select-clear {\r\n    color: var(--disabled-color);\r\n  }\r\n  .ant-select-selection-item-remove {\r\n    color: var(--icon-color);\r\n    &:hover {\r\n      color: var(--icon-hover-color);\r\n    }\r\n  }\r\n  .ant-select-item-option-disabled {\r\n    color: var(--disabled-color);\r\n  }\r\n`;\r\n","import React, { ComponentProps } from 'react';\r\nimport { Select as AntSelect } from 'antd';\r\nimport { RefSelectProps } from 'antd/lib/select';\r\nimport * as S from './BaseSelect.styles';\r\nimport { Dimension } from '@app/interfaces/interfaces';\r\n\r\nexport const { Option } = AntSelect;\r\n\r\nexport interface BaseSelectProps extends ComponentProps<typeof AntSelect> {\r\n  width?: Dimension;\r\n  shadow?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport const BaseSelect = React.forwardRef<RefSelectProps, BaseSelectProps>(\r\n  ({ className, width, shadow, children, ...props }, ref) => (\r\n    <S.Select\r\n      getPopupContainer={(triggerNode) => triggerNode}\r\n      ref={ref}\r\n      className={className}\r\n      $width={width}\r\n      $shadow={shadow}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </S.Select>\r\n  ),\r\n);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nvar CheckableTag = function CheckableTag(_a) {\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    checked = _a.checked,\n    onChange = _a.onChange,\n    onClick = _a.onClick,\n    restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-checkable\"), true), \"\".concat(prefixCls, \"-checkable-checked\"), checked), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nimport warning from '../_util/warning';\nimport CheckableTag from './CheckableTag';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\nvar InternalTag = function InternalTag(_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    style = _a.style,\n    children = _a.children,\n    icon = _a.icon,\n    color = _a.color,\n    onClose = _a.onClose,\n    closeIcon = _a.closeIcon,\n    _a$closable = _a.closable,\n    closable = _a$closable === void 0 ? false : _a$closable,\n    props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('visible' in props), 'Tag', '`visible` will be removed in next major version, please use `visible && <Tag />` instead.') : void 0;\n  }\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-\").concat(color), presetColor), \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), \"\".concat(prefixCls, \"-hidden\"), !visible), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), className);\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? ( /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon)) : ( /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }));\n    }\n    return null;\n  };\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? ( /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children))) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nif (process.env.NODE_ENV !== 'production') {\n  Tag.displayName = 'Tag';\n}\nTag.CheckableTag = CheckableTag;\nexport default Tag;","import styled from 'styled-components';\r\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\r\n\r\n\r\nexport const AddScannerButton = styled(BaseButton)`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n`;\r\n\r\nexport const AddScannerSettingButton = styled(BaseButton)`\r\n  position: fixed;\r\n  bottom: 90px;\r\n  right: 20px;\r\n`;\r\n","import { InputNumber as AntInputNumber } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\ninterface InputNumberProps {\r\n  $block?: boolean;\r\n}\r\n\r\nexport const InputNumber = styled(AntInputNumber)<InputNumberProps>`\r\n  ${(props) => props.$block && 'display: block; width: 100%'};\r\n`;\r\n","import React from 'react';\r\nimport { InputNumberProps as AntdInputNumberProps } from 'antd';\r\nimport * as S from './InputNumber.styles';\r\n\r\nexport interface InputNumberProps extends AntdInputNumberProps {\r\n  block?: boolean;\r\n}\r\n\r\nexport const InputNumber = React.forwardRef<HTMLInputElement, InputNumberProps>(\r\n  ({ children, block, ...props }, ref) => (\r\n    <S.InputNumber ref={ref} $block={block} {...props}>\r\n      {children}\r\n    </S.InputNumber>\r\n  ),\r\n);\r\n","import styled from 'styled-components';\r\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\r\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\r\nimport { BaseTypography } from '@app/components/common/BaseTypography/BaseTypography';\r\n\r\nconst pathWidth = 22;\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n\r\n  --round-slider-handle-cursor: grabbing;\r\n  --round-slider-path-width: ${pathWidth}px;\r\n\r\n  --round-slider-bar-color: var(--primary-color);\r\n  --round-slider-path-color: #def0ff;\r\n  --round-slider-handle-color: #fff;\r\n  --round-slider-handle-border-color: var(--primary-color);\r\n\r\n  round-slider {\r\n    z-index: 1; // To make it under InnerWrapper\r\n  }\r\n`;\r\n\r\nexport const InnerWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  pointer-events: none;\r\n  border-radius: 50%;\r\n  width: calc(100% - ${pathWidth * 2}px);\r\n  height: calc(100% - ${pathWidth * 2}px);\r\n`;\r\n\r\nexport const BackgroundWrapper = styled(InnerWrapper)`\r\n  background: linear-gradient(\r\n    270deg,\r\n    rgba(1, 53, 154, 0.3) 0%,\r\n    rgba(96, 126, 233, 0.4) 0.01%,\r\n    rgba(79, 192, 255, 0.05) 100%\r\n  );\r\n`;\r\n\r\nexport const ShadowWrapper = styled(InnerWrapper)`\r\n  box-shadow: 0px -4px 16px rgba(1, 80, 154, 0.1), 0px 4px 16px rgba(1, 80, 154, 0.1);\r\n  z-index: 2; // To make it under slider\r\n`;\r\n\r\nexport const Text = styled(BaseTypography.Text)`\r\n  font-size: ${FONT_SIZE.xs};\r\n`;\r\n\r\nexport const TopText = styled(Text)`\r\n  position: absolute;\r\n  top: 5%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nexport const BotText = styled(Text)`\r\n  position: absolute;\r\n  bottom: 5%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nexport const LeftText = styled(Text)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 5%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const RightText = styled(Text)`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 5%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const CenterText = styled(BaseTypography.Text)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  font-size: ${FONT_SIZE.xl};\r\n\r\n  font-weight: ${FONT_WEIGHT.semibold};\r\n`;\r\n\r\nexport const TimeRow = styled.div`\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nexport const TimeWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap: 0.3rem;\r\n  width: 50%;\r\n  border-radius: 14px;\r\n  padding: 1rem;\r\n\r\n  box-shadow: ${(props) => props.theme.boxShadow};\r\n`;\r\n\r\nexport const NumberInput = styled(InputNumber)`\r\n  width: unset;\r\n\r\n  input {\r\n    font-weight: ${FONT_WEIGHT.semibold};\r\n  }\r\n`;\r\n","import React, { useEffect, useCallback , useState } from 'react';\r\nimport { BaseTable } from '@app/components/common/BaseTable/BaseTable';\r\nimport { ColumnsType } from 'antd/es/table';\r\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseSpace } from '@app/components/common/BaseSpace/BaseSpace';\r\nimport { BaseTooltip } from '@app/components/common/BaseTooltip/BaseTooltip';\r\nimport { DeleteOutlined, EditFilled, PlusOutlined, PoweroffOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { BaseSwitch } from '@app/components/common/BaseSwitch/BaseSwitch';\r\nimport { ScannerForm, ScannerSettingForm, ScannerTableRow, SymbolData, deleteScanner, getScannerData, getScannerSetting, getSymbolData, setScannerActive, startStopScanner } from 'api/table.api';\r\nimport { useMounted } from '@app/hooks/useMounted';\r\nimport { BaseModal } from '@app/components/common/BaseModal/BaseModal';\r\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\r\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\r\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\r\nimport { BaseSelect } from '@app/components/common/selects/BaseSelect/BaseSelect';\r\nimport { InputNumber, Typography } from 'antd';\r\nimport { doSaveScanner, doSaveScannerSetting } from '@app/store/slices/userSlice';\r\nimport { useAppDispatch } from '@app/hooks/reduxHooks';\r\nimport { notificationController } from '@app/controllers/notificationController';\r\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\r\nimport { BaseTag } from '@app/components/common/BaseTag/BaseTag';\r\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\r\nimport { AddScannerButton, AddScannerSettingButton } from './Scanner.styles';\r\nimport { NumberInput } from '@app/components/header/dropdowns/settingsDropdown/settingsOverlay/nightModeSettings/NightTimeSlider/NightTimeSlider.styles';\r\nimport { startStopBot } from '@app/api/user.api';\r\n\r\nconst initialFormValues: ScannerForm = {\r\n  id: undefined,\r\n  title: '',\r\n  positionSide: 'short',\r\n  orderChange: undefined,\r\n  elastic: undefined,\r\n  amount: undefined,\r\n  turnover: undefined,\r\n  ocNumber: undefined,\r\n  configExpire: undefined,\r\n  amountLimit: undefined,\r\n  onlyPairs: [],\r\n  amountExpire: undefined,\r\n  autoAmount: undefined,\r\n  orderType: 1,\r\n  userId: 0,  \r\n  isActive: true\r\n};\r\n\r\nconst initialSettingFormValues: ScannerSettingForm = {\r\n  id: undefined,\r\n  userId: 0,\r\n  maxOpen: undefined,\r\n  blackList: [],\r\n};\r\n\r\nexport const ScannerTable: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { Text } = Typography;\r\n\r\n  const [tableData, setTableData] = useState<{ data: ScannerTableRow[] }>({\r\n    data: [],\r\n  });\r\n  const [selectOptions, setSelectOptions] = useState<any[]>([]);\r\n\r\n  const { t } = useTranslation();\r\n  const { isMounted } = useMounted();\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [isSettingModalOpen, setIsSettingModalOpen] = useState<boolean>(false);\r\n\r\n  const [isEditConfig, setIsEditConfig] = useState<boolean>(false);\r\n\r\n  const [form] = BaseForm.useForm();  \r\n  const [settingForm] = BaseForm.useForm();  \r\n  const [isStop, setStop] = useState(false);\r\n  const [isStopping, setStopping] = useState(false);\r\n\r\n  const fetch = useCallback(\r\n    () => {\r\n      getScannerData().then((res) => {\r\n        if (isMounted.current) {          \r\n          setTableData({data: res});\r\n        }\r\n      });      \r\n    },\r\n    [isMounted],\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n  }, [fetch]);\r\n  const handleOpenScannerSetting = () => {\r\n    getSymbolData().then((res) => {\r\n      if (isMounted.current) {          \r\n        setSelectOptions(res.map((item) => ({ value: item.label, label: item.label })));\r\n      }\r\n    });\r\n    getScannerSetting().then((res) => {\r\n      if (isMounted.current) {          \r\n        settingForm.setFieldsValue({\r\n          ...initialSettingFormValues,\r\n          id: res.id,\r\n          maxOpen: res.maxOpen,\r\n          blackList: res.blackList\r\n        });\r\n        setStop(res.stop ?? false);\r\n        setIsSettingModalOpen(true);\r\n      }      \r\n    });\r\n  };\r\n\r\n  const handleOpenAddEdit = (rowId?: number) => {   \r\n    getSymbolData().then((res) => {\r\n      if (isMounted.current) {          \r\n        setSelectOptions(res.map((item) => ({ value: item.label, label: item.label })));\r\n      }\r\n    });\r\n    if(rowId)\r\n      {        \r\n        setIsEditConfig(true);\r\n        let cloneData = {...tableData };\r\n        cloneData.data.forEach(function(part, index, theArray) {\r\n          if(theArray[index].id === rowId)\r\n          {            \r\n            form.setFieldsValue({\r\n              ...initialFormValues,\r\n              title: theArray[index].title,\r\n              positionSide: theArray[index].positionSide,\r\n              amount: theArray[index].amount,\r\n              amountLimit: theArray[index].amountLimit,\r\n              configExpire: theArray[index].configExpire,\r\n              amountExpire: theArray[index].amountExpire,\r\n              autoAmount: theArray[index].autoAmount,\r\n              elastic: theArray[index].elastic,\r\n              isActive: theArray[index].isActive,\r\n              id: theArray[index].id,\r\n              orderChange: theArray[index].orderChange,\r\n              ocNumber: theArray[index].ocNumber,\r\n              orderType: theArray[index].orderType,\r\n              turnover: theArray[index].turnover,\r\n              onlyPairs: theArray[index].onlyPairs\r\n            })\r\n          }\r\n        });        \r\n      }\r\n    else\r\n      {        \r\n        setIsEditConfig(false);\r\n        form.setFieldsValue({\r\n          ...initialFormValues\r\n        })\r\n      }\r\n      setIsModalOpen(true);\r\n  };\r\n    \r\n  const handleDeleteRow = (rowId: number) => {\r\n    deleteScanner(rowId).then((res) => {\r\n      if (res) {          \r\n        setTableData({\r\n          ...tableData,\r\n          data: tableData.data.filter((item) => item.id !== rowId)\r\n        });\r\n      }\r\n      else{\r\n        notificationController.error({ message: \"something went wrong!\" });        \r\n      }\r\n    }).catch((err) => {\r\n      notificationController.error({ message: err.message });        \r\n    });\r\n    \r\n  };\r\n\r\n  const handleActiveRow = (rowId: number, isActive: boolean) => {\r\n    setScannerActive(rowId, isActive).then((res) => {\r\n      if (res) {          \r\n        fetch()\r\n      }\r\n      else{\r\n        notificationController.error({ message: \"something went wrong!\" });        \r\n      }\r\n    }).catch((err) => {\r\n      notificationController.error({ message: err.message });        \r\n    });\r\n  };\r\n\r\n  const columns: ColumnsType<ScannerTableRow> = [\r\n    {\r\n      title: () => (<div>Title ({tableData.data.filter((item) => item.isActive).length}/{tableData.data.length})</div>),\r\n      dataIndex: 'title',\r\n      render: (text: string, record: { id: number; isActive: boolean }) => {\r\n        return (\r\n          <BaseSpace>            \r\n            <BaseTooltip title=\"edit\">\r\n              <BaseButton type=\"default\" size='small' icon={<EditFilled />} onClick={() => handleOpenAddEdit(record.id)} />\r\n            </BaseTooltip>\r\n            <BaseSwitch size='small' checked={record.isActive} onChange={() => handleActiveRow(record.id, !record.isActive)} />\r\n            <div>{text}</div>\r\n          </BaseSpace>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Position',\r\n      dataIndex: 'positionSide',\r\n      width: '10px',\r\n    }, \r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'amount'\r\n    },\r\n    {\r\n      title: 'OC',\r\n      dataIndex: 'orderChange',\r\n    },\r\n    {\r\n      title: 'Elastic',\r\n      dataIndex: 'elastic',\r\n    },\r\n    {\r\n      title: 'Turnover',\r\n      dataIndex: 'turnover',\r\n    },\r\n    {\r\n      title: 'Numbs',\r\n      dataIndex: 'ocNumber',\r\n    },  \r\n    {\r\n      title: 'Limit',\r\n      dataIndex: 'amountLimit',\r\n    },\r\n    {\r\n      title: 'Expire',\r\n      dataIndex: 'configExpire',\r\n    },\r\n    {\r\n      title: 'Only Pairs',\r\n      key: 'onlyPairs',\r\n      dataIndex: 'onlyPairs',\r\n      render: (onlyPairs: string[]) => onlyPairs ? (\r\n        <BaseRow gutter={[5, 5]}>\r\n          {onlyPairs.map((tag: string) => (\r\n            <BaseTag color=\"green\" key={tag}>\r\n              {tag.toUpperCase()}\r\n            </BaseTag>\r\n          ))}\r\n        </BaseRow>\r\n      ) : <></>,\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'delete',\r\n      width: '5%',\r\n      render: (text: string, record: { id: number }) => {\r\n        return (\r\n          <BaseSpace>            \r\n            <BaseTooltip title=\"Delete\">\r\n              <BaseButton type=\"primary\" shape=\"circle\" icon={<DeleteOutlined />} size=\"small\" onClick={() => handleDeleteRow(record.id)}/>\r\n            </BaseTooltip>\r\n          </BaseSpace>\r\n        );\r\n      },\r\n    }\r\n  ];\r\n\r\n  const onSwitchChange = (checked: boolean) => {\r\n    form.setFieldsValue({ isActive: checked });\r\n  };\r\n  \r\n  const handleSaveScanner = () => {\r\n    const title = form.getFieldValue('title');\r\n    const positionSide = form.getFieldValue('positionSide');\r\n    const id = form.getFieldValue('id');\r\n    const orderChange = form.getFieldValue('orderChange');\r\n    const ocNumber = form.getFieldValue('ocNumber');\r\n    const autoAmount = form.getFieldValue('autoAmount');\r\n    const amount = form.getFieldValue('amount');\r\n    const amountLimit = form.getFieldValue('amountLimit');\r\n    const amountExpire = form.getFieldValue('amountExpire');\r\n    const configExpire = form.getFieldValue('configExpire');\r\n    const elastic = form.getFieldValue('elastic');\r\n    const onlyPairs = form.getFieldValue('onlyPairs');\r\n    const turnover = form.getFieldValue('turnover');\r\n    const isActive = form.getFieldValue('isActive');\r\n    const formValues: ScannerForm = {\r\n      id: id,\r\n      title: title,\r\n      userId: 0,\r\n      orderType: 1,\r\n      positionSide: positionSide,\r\n      orderChange: orderChange,\r\n      autoAmount: autoAmount ?? 0,\r\n      amount: amount,\r\n      amountExpire: amountExpire ?? 0,\r\n      amountLimit: amountLimit ?? 0,\r\n      configExpire: configExpire ?? 0,\r\n      isActive: isActive,\r\n      elastic: elastic,\r\n      onlyPairs: onlyPairs,\r\n      turnover: turnover,\r\n      ocNumber: ocNumber      \r\n    };\r\n    dispatch(doSaveScanner(formValues))\r\n      .unwrap()\r\n      .then(() => {\r\n        fetch();\r\n        setIsModalOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        notificationController.error({ message: err.message });        \r\n      });\r\n  };\r\n  const onFinish = async (values = {}) => {\r\n    handleSaveScanner();\r\n  };\r\n\r\n  const onSettingFinish = async (values = {}) => {\r\n    handleSaveScannerSetting();\r\n  };\r\n\r\n  const handleSaveScannerSetting = () => {\r\n    const maxOpen = settingForm.getFieldValue('maxOpen');\r\n    const id = settingForm.getFieldValue('id');\r\n    const blackList = settingForm.getFieldValue('blackList');\r\n    \r\n    const formValues: ScannerSettingForm = {\r\n      id: id,\r\n      userId: 0,\r\n      maxOpen: maxOpen ?? 15,\r\n      blackList: blackList      \r\n    };\r\n    dispatch(doSaveScannerSetting(formValues))\r\n      .unwrap()\r\n      .then(() => {\r\n        setIsSettingModalOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        notificationController.error({ message: err.message });        \r\n      });\r\n  };\r\n  const handleStartStop = (checked: boolean) => {\r\n    setStopping(true);\r\n    startStopScanner({\r\n      id : 0,\r\n      userId : 0,\r\n      blackList : [],      \r\n      stop : !checked\r\n    }).then((res) => {     \r\n      setStop(!checked);      \r\n    }).finally(()=>{\r\n      setStopping(false);\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <BaseTable\r\n      columns={columns}\r\n      dataSource={tableData.data}\r\n      rowKey=\"id\"\r\n      pagination={false}\r\n      scroll={{ x: 1000 }}\r\n      />\r\n      <BaseModal\r\n            title={ isEditConfig ? 'Edit Scanner': 'Add Scanner'}\r\n            centered\r\n            open={isModalOpen}            \r\n            size=\"large\"\r\n            footer={<></>}\r\n            onCancel={()=>setIsModalOpen(false)}\r\n          >\r\n            <BaseButtonsForm\r\n              name=\"editForm\"\r\n              form={form}      \r\n              isFieldsChanged={true}\r\n              initialValues={initialFormValues}    \r\n              footer={\r\n                <>\r\n                  <BaseButtonsForm.Item style={{marginTop: '30px'}}>\r\n                    <BaseButton type=\"primary\" htmlType=\"submit\" style={{float: 'right', width: '100px', height: '40px'}}>\r\n                      Save\r\n                    </BaseButton>\r\n                    <BaseButton type=\"primary\" htmlType=\"button\" style={{float: 'right', width: '100px', height: '40px', marginRight: '20px'}}\r\n                      onClick={() => {              \r\n                        setIsModalOpen(false);\r\n                      }}>\r\n                      Cancel\r\n                    </BaseButton>\r\n                  </BaseButtonsForm.Item>                \r\n                </>\r\n                \r\n              }    \r\n              onFinish={onFinish}\r\n            >\r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={16} md={12}>\r\n                    <BaseButtonsForm.Item name='title' label='Name' style={{marginBottom: '5px'}}\r\n                      rules={[{ required: true, message: 'Name is required' }]}\r\n                    >\r\n                      <BaseInput disabled={isEditConfig} placeholder='Name of scanner' />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={8} md={12}>\r\n                    <BaseButtonsForm.Item name='positionSide' label='Position' style={{marginBottom: '5px'}}\r\n                      rules={[{ required: true, message: 'Position is required' }]}>\r\n                      <BaseSelect disabled={isEditConfig} placeholder='Select position' options={[{value: 'short'}, {value: 'long'}]} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow>\r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='orderChange' label='OC' style={{marginBottom: '5px'}}\r\n                      rules={[{ required: true, message: 'OC is required' }]}>\r\n                      <InputNumber min={0.1} addonAfter='%' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='elastic' label='Elastic' style={{marginBottom: '5px'}}\r\n                        rules={[{ required: true, message: 'Elastic is required' }]}>\r\n                      <InputNumber min={1} addonAfter='%' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow>\r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='turnover' label='Turnover' style={{marginBottom: '5px'}}\r\n                      rules={[{ required: true, message: 'Turnover is required' }]}>\r\n                      <InputNumber min={1} addonAfter='$' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='amount' label='Amount' style={{marginBottom: '5px'}}>\r\n                      <InputNumber min={1} addonAfter='$' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow>\r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='ocNumber' label='Numbs' style={{marginBottom: '5px'}}\r\n                      rules={[{ required: true, message: 'Number of OC is required' }]}>\r\n                      <InputNumber min={1} style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='configExpire' label='Expire' style={{marginBottom: '5px'}}>\r\n                      <InputNumber min={0} addonAfter='min' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow>\r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='autoAmount' label='Auto Amount' style={{marginBottom: '5px'}}>\r\n                      <InputNumber min={1} addonAfter='%' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={12} md={12}>\r\n                    <BaseButtonsForm.Item name='amountLimit' label='Limit' style={{marginBottom: '5px'}}>\r\n                      <InputNumber min={0} addonAfter='$' style={{ width: '100%' }} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n              </BaseRow> \r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={24} md={24}>\r\n                    <BaseButtonsForm.Item name='onlyPairs' label='Only Pairs' style={{marginBottom: '5px'}}>\r\n                      <BaseSelect mode='multiple' showArrow showSearch placeholder='Select symbol' options={selectOptions} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>                  \r\n              </BaseRow>\r\n              <BaseRow>\r\n                  <BaseCol xs={18} md={19}>                    \r\n                  </BaseCol>\r\n                  <BaseCol xs={3} md={2}>\r\n                    <BaseButtonsForm.Item name='isActive' style={{marginBottom: '5px'}} valuePropName=\"checked\">\r\n                      <BaseSwitch onChange={onSwitchChange} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>\r\n                  <BaseCol xs={3} md={3}>\r\n                    <BaseButtonsForm.Item style={{marginBottom: '5px'}}>\r\n                      <Text>Active</Text>\r\n                    </BaseButtonsForm.Item>                    \r\n                  </BaseCol>\r\n              </BaseRow>\r\n                                          \r\n            </BaseButtonsForm>            \r\n      </BaseModal>\r\n      <BaseModal\r\n            title='Scanner Settings'\r\n            centered\r\n            open={isSettingModalOpen}            \r\n            size=\"small\"\r\n            style={{fontSize: '12px'}}\r\n            footer={<></>}\r\n            onCancel={()=>setIsSettingModalOpen(false)}\r\n          >\r\n            <BaseButtonsForm\r\n              name=\"settingForm\"\r\n              form={settingForm}      \r\n              isFieldsChanged={true}\r\n              initialValues={initialSettingFormValues}    \r\n              footer={\r\n                <>\r\n                  <BaseButtonsForm.Item style={{marginTop: '30px'}}>\r\n                    <BaseButton type=\"primary\" htmlType=\"submit\" style={{float: 'right', width: '80px'}}>\r\n                      Save\r\n                    </BaseButton>   \r\n                    <BaseButton type=\"primary\" htmlType=\"button\" style={{float: 'right', width: '80px', marginRight: '10px'}}\r\n                      onClick={() => {              \r\n                        setIsSettingModalOpen(false);\r\n                      }}>\r\n                      Cancel\r\n                    </BaseButton>                 \r\n                    <BaseSwitch style={{ float: 'left', marginTop: '10px'}} loading={isStopping} size='default' checkedChildren=\"Stop\" unCheckedChildren=\"Start\" checked={!isStop} onChange={handleStartStop} />                    \r\n                  </BaseButtonsForm.Item>                \r\n                </>\r\n                \r\n              }    \r\n              onFinish={onSettingFinish}\r\n            >\r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={24} md={24}>\r\n                    <BaseButtonsForm.Item name='maxOpen' label='Open limit'>\r\n                      <NumberInput min={1} max={15} placeholder='OC open limit' />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>                  \r\n              </BaseRow>\r\n              \r\n              <BaseRow gutter={{ xs: 5, md: 5, xl: 10 }}>\r\n                  <BaseCol xs={24} md={24}>\r\n                    <BaseButtonsForm.Item name='blackList' label='Blacklist'>\r\n                      <BaseSelect mode='multiple' showArrow showSearch placeholder='Select symbol' options={selectOptions} />\r\n                    </BaseButtonsForm.Item>\r\n                  </BaseCol>                  \r\n              </BaseRow>                                                        \r\n            </BaseButtonsForm>            \r\n      </BaseModal>\r\n      <AddScannerSettingButton type=\"primary\" shape=\"circle\" icon={<SettingOutlined />} size=\"large\" onClick={()=> handleOpenScannerSetting()}></AddScannerSettingButton>      \r\n      <AddScannerButton type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} size=\"large\" onClick={()=> handleOpenAddEdit()}></AddScannerButton>      \r\n    </>    \r\n  );\r\n};\r\n","import React from 'react';\r\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\r\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\r\nimport { BaseSpace } from '@app/components/common/BaseSpace/BaseSpace';\r\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\r\nimport { ScannerTable } from '@app/components/tables/Scanners/ScannerTable';\r\n\r\nconst ScannerPage: React.FC = () => {\r\n   \r\n  return (\r\n    <>\r\n      <PageTitle>Scanners</PageTitle>\r\n      <BaseCol>        \r\n        <S.Card title='Scanners'>\r\n          <BaseSpace direction=\"vertical\" style={{width: \"100%\"}} size={24}>      \r\n            <ScannerTable />\r\n          </BaseSpace>\r\n        </S.Card>\r\n      </BaseCol>      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScannerPage;\r\n","import styled from 'styled-components';\r\nimport { BaseCard as CommonCard } from '@app/components/common/BaseCard/BaseCard';\r\nimport { BaseCollapse } from '@app/components/common/BaseCollapse/BaseCollapse';\r\n\r\nexport const Card = styled(CommonCard)`\r\n  width: 100%;\r\n  margin-bottom: 1.25rem;\r\n  .ant-card-head-title {\r\n    font-size: 1rem;\r\n  }\r\n  .ant-card-body {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 1.25rem;\r\n    align-items: center;\r\n  }\r\n  .ant-card-body:before {\r\n    display: none;\r\n  }\r\n  .ant-card-body:after {\r\n    display: none;\r\n  }\r\n  &.ant-card-bordered {\r\n    border: 1px solid var(--border-color);\r\n  }\r\n`;\r\n\r\nexport const InputsWrapper = styled.div`\r\n  width: 30rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.25rem;\r\n`;\r\n\r\nexport const CollapseWrapper = styled(BaseCollapse)`\r\n  width: 40rem;\r\n`;\r\n"],"names":["modalSizes","small","medium","large","BaseModal","_ref","_Object$entries$find","size","children","props","modalSize","Object","entries","find","sz","_jsx","Modal","getContainer","width","info","success","warning","error","Table","styled","AntdTable","_templateObject","_taggedTemplateLiteral","FONT_SIZE","xs","BaseTable","S","Select","AntSelect","$width","normalizeProp","FONT_WEIGHT","$shadow","BORDER_RADIUS","Option","BaseSelect","React","ref","className","shadow","getPopupContainer","triggerNode","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","customizePrefixCls","prefixCls","checked","onChange","onClick","restProps","getPrefixCls","ConfigContext","cls","classNames","_defineProperty","concat","_extends","PresetColorRegex","RegExp","PresetColorTypes","join","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","style","icon","color","onClose","closeIcon","_a$closable","closable","_React$useContext","direction","_React$useState","_React$useState2","_slicedToArray","visible","setVisible","isPresetColor","test","tagStyle","backgroundColor","undefined","presetColor","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","type","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Wave","Tag","CheckableTag","AddScannerButton","BaseButton","AddScannerSettingButton","_templateObject2","InputNumber","AntInputNumber","$block","block","div","InnerWrapper","pathWidth","Text","_templateObject3","_templateObject4","BaseTypography","_templateObject5","NumberInput","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","xl","semibold","_templateObject11","_templateObject12","theme","boxShadow","_templateObject13","initialFormValues","id","title","positionSide","orderChange","elastic","amount","turnover","ocNumber","configExpire","amountLimit","onlyPairs","amountExpire","autoAmount","orderType","userId","isActive","initialSettingFormValues","maxOpen","blackList","ScannerTable","dispatch","useAppDispatch","Typography","tableData","setTableData","useState","data","selectOptions","setSelectOptions","useTranslation","isMounted","useMounted","isModalOpen","setIsModalOpen","isSettingModalOpen","setIsSettingModalOpen","isEditConfig","setIsEditConfig","form","BaseForm","useForm","settingForm","isStop","setStop","isStopping","setStopping","fetch","useCallback","getScannerData","then","res","current","useEffect","handleOpenAddEdit","rowId","getSymbolData","map","item","value","label","forEach","part","index","theArray","setFieldsValue","columns","_jsxs","filter","dataIndex","render","text","record","BaseSpace","BaseTooltip","EditFilled","BaseSwitch","handleActiveRow","setScannerActive","notificationController","message","catch","err","key","BaseRow","gutter","tag","BaseTag","toUpperCase","_Fragment","shape","DeleteOutlined","handleDeleteRow","deleteScanner","handleSaveScannerSetting","getFieldValue","formValues","doSaveScannerSetting","unwrap","dataSource","rowKey","pagination","scroll","x","centered","open","footer","onCancel","BaseButtonsForm","name","isFieldsChanged","initialValues","Item","marginTop","htmlType","float","height","marginRight","onFinish","async","handleSaveScanner","doSaveScanner","md","BaseCol","marginBottom","rules","required","BaseInput","disabled","placeholder","options","min","addonAfter","mode","showArrow","showSearch","valuePropName","fontSize","loading","checkedChildren","unCheckedChildren","startStopScanner","stop","finally","max","SettingOutlined","getScannerSetting","_res$stop","PlusOutlined","ScannerPage","PageTitle","Card","CommonCard","BaseCollapse"],"sourceRoot":""}